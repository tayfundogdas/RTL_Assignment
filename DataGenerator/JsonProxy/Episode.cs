// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DataGenerator.JsonProxy;
//
//    var episode = Episode.FromJson(jsonString);

namespace DataGenerator.JsonProxy
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Episode
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("season")]
        public long Season { get; set; }

        [JsonProperty("number")]
        public long? Number { get; set; }

        [JsonProperty("airdate")]
        public DateTimeOffset Airdate { get; set; }

        [JsonProperty("airtime")]
        public string Airtime { get; set; }

        [JsonProperty("airstamp")]
        public DateTimeOffset Airstamp { get; set; }

        [JsonProperty("runtime")]
        public long? Runtime { get; set; }

        [JsonProperty("image")]
        public Image Image { get; set; }

        [JsonProperty("summary")]
        public object Summary { get; set; }

        [JsonProperty("_links")]
        public EpisodeLinks Links { get; set; }

        [JsonProperty("_embedded")]
        public Embedded Embedded { get; set; }
    }

    public partial class Embedded
    {
        [JsonProperty("show")]
        public Show Show { get; set; }
    }

    public partial class Show
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("language")]
        public string Language { get; set; }

        [JsonProperty("genres")]
        public List<string> Genres { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("runtime")]
        public long? Runtime { get; set; }

        [JsonProperty("premiered")]
        public DateTimeOffset Premiered { get; set; }

        [JsonProperty("officialSite")]
        public Uri OfficialSite { get; set; }

        [JsonProperty("schedule")]
        public Schedule Schedule { get; set; }

        [JsonProperty("rating")]
        public Rating Rating { get; set; }

        [JsonProperty("weight")]
        public long Weight { get; set; }

        [JsonProperty("network")]
        public Network Network { get; set; }

        [JsonProperty("webChannel")]
        public Network WebChannel { get; set; }

        [JsonProperty("externals")]
        public Externals Externals { get; set; }

        [JsonProperty("image")]
        public Image Image { get; set; }

        [JsonProperty("summary")]
        public object Summary { get; set; }

        [JsonProperty("updated")]
        public long Updated { get; set; }

        [JsonProperty("_links")]
        public ShowLinks Links { get; set; }
    }

    public partial class Externals
    {
        [JsonProperty("tvrage")]
        public object Tvrage { get; set; }

        [JsonProperty("thetvdb")]
        public object Thetvdb { get; set; }

        [JsonProperty("imdb")]
        public object Imdb { get; set; }
    }

    public partial class Image
    {
        [JsonProperty("medium")]
        public Uri Medium { get; set; }

        [JsonProperty("original")]
        public Uri Original { get; set; }
    }

    public partial class ShowLinks
    {
        [JsonProperty("self")]
        public Self Self { get; set; }

        [JsonProperty("previousepisode")]
        public Self Previousepisode { get; set; }

        [JsonProperty("nextepisode")]
        public Self Nextepisode { get; set; }
    }

    public partial class Self
    {
        [JsonProperty("href")]
        public Uri Href { get; set; }
    }

    public partial class Network
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("country")]
        public Country Country { get; set; }
    }

    public partial class Country
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("code")]
        public string Code { get; set; }

        [JsonProperty("timezone")]
        public string Timezone { get; set; }
    }

    public partial class Rating
    {
        [JsonProperty("average")]
        public object Average { get; set; }
    }

    public partial class Schedule
    {
        [JsonProperty("time")]
        public string Time { get; set; }

        [JsonProperty("days")]
        public List<string> Days { get; set; }
    }

    public partial class EpisodeLinks
    {
        [JsonProperty("self")]
        public Self Self { get; set; }
    }

    public partial class Episode
    {
        public static List<Episode> FromJson(string json) => JsonConvert.DeserializeObject<List<Episode>>(json, DataGenerator.JsonProxy.Converter.Settings);
    }

    public static class SerializeEpisode
    {
        public static string ToJson(this List<Episode> self) => JsonConvert.SerializeObject(self, DataGenerator.JsonProxy.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
